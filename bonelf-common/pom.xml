<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>bonelf</artifactId>
        <groupId>com.bonelf</groupId>
        <version>1.0.0</version>
        <!-- lookup parent from repository -->
        <relativePath>../pom.xml</relativePath>
    </parent>
    <!--jar:其他module的依赖-->
    <packaging>jar</packaging>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>bonelf-common</artifactId>
    <description>公共配置模块</description>

    <properties>
        <!--<shiro.version>1.6.0</shiro.version>-->
        <!--<shiro-redis.version>3.3.1</shiro-redis.version>-->
        <websocket-netty.version>0.9.5</websocket-netty.version>
        <mybatis-plus.version>3.4.0</mybatis-plus.version>
        <!--discard long time none received connection-->
        <!--<druid.version>1.2.1</druid.version>-->
        <druid.version>1.1.22</druid.version>
        <dynamic-datasource.version>2.5.4</dynamic-datasource.version>
        <swagger2-ui.version>1.9.3</swagger2-ui.version>
        <wechatmini-sdk.version>3.9.6.B</wechatmini-sdk.version>
        <aliyun-sdk.version>4.5.14</aliyun-sdk.version>
        <!--最新2.5.0.RELEASE 已过时-->
        <oauth.version>2.3.6.RELEASE</oauth.version>
        <mail.version>1.4.7</mail.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.bonelf</groupId>
            <artifactId>bonelf-gateway-constant</artifactId>
        </dependency>
        <!-- Spring Begin -->
        <!--nacos依赖-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-alibaba-nacos-discovery</artifactId>
        </dependency>
        <!--feign请求依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <!-- 熔断、降级 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <!--SpringBoot依赖 common使用这个依赖表示了common是服务（service） web项目公用的（gateway不是）-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--spring yml属性定义-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- Spring End -->
        <!--redis-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- Swagger API文档 -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>swagger-bootstrap-ui</artifactId>
        </dependency>
        <!--swagger-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
        </dependency>
        <!-- 增加两个配置解决 NumberFormatException -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-models</artifactId>
        </dependency>
        <!--jwt-->
        <!--<dependency>-->
        <!--    <groupId>io.jsonwebtoken</groupId>-->
        <!--    <artifactId>jjwt</artifactId>-->
        <!--</dependency>-->
        <!-- 数据库 Begin -->
        <!-- 动态数据源  sharding-jdbc也不错-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
            <version>${dynamic-datasource.version}</version>
        </dependency>
        <!-- druid -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <!-- mybatis-plus -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>
        <!-- 数据库 End -->
        <!--参数校验-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!--WXApi-->
        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-miniapp</artifactId>
            <version>${wechatmini-sdk.version}</version>
        </dependency>
        <!--阿里云的短信服务SDK-->
        <dependency>
            <groupId>com.aliyun</groupId>
            <artifactId>aliyun-java-sdk-core</artifactId>
            <version>${aliyun-sdk.version}</version>
        </dependency>
        <!--jredis-->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <!-- Shiro 注意使用的不是core
        利用Spring Boot的自动化配置特性来实现快速的将Shiro集成到SpringBoot应用中
        -->
        <!--<dependency>-->
        <!--    <groupId>org.apache.shiro</groupId>-->
        <!--    <artifactId>shiro-spring-boot-starter</artifactId>-->
        <!--    <version>${shiro.version}</version>-->
        <!--</dependency>-->
        <!-- shiro-redis session存储到redis -->
        <!--<dependency>-->
        <!--    <groupId>org.crazycake</groupId>-->
        <!--    <artifactId>shiro-redis</artifactId>-->
        <!--    <version>${shiro-redis.version}</version>-->
        <!--    <exclusions>-->
        <!--        <exclusion>-->
        <!--            <groupId>org.apache.shiro</groupId>-->
        <!--            <artifactId>shiro-core</artifactId>-->
        <!--        </exclusion>-->
        <!--    </exclusions>-->
        <!--</dependency>-->
        <!--oauth2认证-->
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
            <version>${oauth.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
        </dependency>
        <!--MAIL-->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>${mail.version}</version>
        </dependency>
        <!--rocketmq-->
        <dependency>
            <groupId>org.apache.rocketmq</groupId>
            <artifactId>rocketmq-client</artifactId>
        </dependency>
    </dependencies>

</project>