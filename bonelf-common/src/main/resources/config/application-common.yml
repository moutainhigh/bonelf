server:
  servlet:
    # 配置前请看 GateWay的GlobalAccessFilter
    context-path: /bonelf

spring:
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    # 读取网卡信息时间 Cannot determine local hostname reason
    inetutils:
      timeout-seconds: 10
  profiles:
    include:
      - third
      - bonelf

  datasource:
    druid:
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: 123456
        allow:
      web-stat-filter:
        enabled: true

    dynamic:
      druid: # 全局druid参数，绝大部分值和默认保持一致。(现已支持的参数如下,不清楚含义不要乱设置)
        # 连接池的配置信息
        # 初始化大小，最小，最大
        initial-size: 5
        min-idle: 5
        max-active: 20
        # 配置获取连接等待超时的时间
        max-wait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 1 FROM DUAL
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: true
        max-pool-prepared-statement-per-connection-size: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000

feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connect-timeout: 5000  # 指定Feign连接提供者的超时时限
        read-timeout: 5000    # 指定Feign从请求到获取提供者响应的超时时限

hystrix:
  command:
    default:
      execution:
        isolation:
          timeout:
            enabled: true
          thread:
            timeout-in-milliseconds: 2000
          strategy: SEMAPHORE
    #   设置具体commandKey的示例（请替换commandKey为你所设置的,对应@HystrixCommand上的值）
    commandKey:
      execution:
        isolation:
          thread:
            timeout-in-milliseconds: 4000

logging:
  #  默认
  config: classpath:logback-spring.xml
  level:
    org:
      mybatis: debug

# mybatis-plus 配置
mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  config-location: classpath:/mybatis/mybatis-config.xml
  mapper-locations: classpath:/mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.bonelf.**.domain.entity
  type-handlers-package: com.bonelf.common.mybatisplus.handler

swagger:
  enable: true